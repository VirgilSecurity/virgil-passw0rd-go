//
// Copyright (c) 2015-2020, Virgil Security, Inc.
//
// Lead Maintainer: Virgil Security Inc. <support@virgilsecurity.com>
//
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//     (1) Redistributions of source code must retain the above copyright notice, this
//     list of conditions and the following disclaimer.
//
//     (2) Redistributions in binary form must reproduce the above copyright notice,
//     this list of conditions and the following disclaimer in the documentation
//     and/or other materials provided with the distribution.
//
//     (3) Neither the name of virgil nor the names of its
//     contributors may be used to endorse or promote products derived from
//     this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.1
// 	protoc        v3.11.4
// source: purekitV3_storage.proto

package protos

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserRecordSigned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version              uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	UserId               string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PheRecordNs          []byte `protobuf:"bytes,3,opt,name=phe_record_ns,json=pheRecordNs,proto3" json:"phe_record_ns,omitempty"`
	PheRecordNc          []byte `protobuf:"bytes,4,opt,name=phe_record_nc,json=pheRecordNc,proto3" json:"phe_record_nc,omitempty"`
	Upk                  []byte `protobuf:"bytes,5,opt,name=upk,proto3" json:"upk,omitempty"`
	EncryptedUsk         []byte `protobuf:"bytes,6,opt,name=encrypted_usk,json=encryptedUsk,proto3" json:"encrypted_usk,omitempty"`
	EncryptedUskBackup   []byte `protobuf:"bytes,7,opt,name=encrypted_usk_backup,json=encryptedUskBackup,proto3" json:"encrypted_usk_backup,omitempty"`
	BackupPwdHash        []byte `protobuf:"bytes,8,opt,name=backup_pwd_hash,json=backupPwdHash,proto3" json:"backup_pwd_hash,omitempty"`
	PasswordRecoveryBlob []byte `protobuf:"bytes,9,opt,name=password_recovery_blob,json=passwordRecoveryBlob,proto3" json:"password_recovery_blob,omitempty"`
}

func (x *UserRecordSigned) Reset() {
	*x = UserRecordSigned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRecordSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRecordSigned) ProtoMessage() {}

func (x *UserRecordSigned) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRecordSigned.ProtoReflect.Descriptor instead.
func (*UserRecordSigned) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{0}
}

func (x *UserRecordSigned) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserRecordSigned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserRecordSigned) GetPheRecordNs() []byte {
	if x != nil {
		return x.PheRecordNs
	}
	return nil
}

func (x *UserRecordSigned) GetPheRecordNc() []byte {
	if x != nil {
		return x.PheRecordNc
	}
	return nil
}

func (x *UserRecordSigned) GetUpk() []byte {
	if x != nil {
		return x.Upk
	}
	return nil
}

func (x *UserRecordSigned) GetEncryptedUsk() []byte {
	if x != nil {
		return x.EncryptedUsk
	}
	return nil
}

func (x *UserRecordSigned) GetEncryptedUskBackup() []byte {
	if x != nil {
		return x.EncryptedUskBackup
	}
	return nil
}

func (x *UserRecordSigned) GetBackupPwdHash() []byte {
	if x != nil {
		return x.BackupPwdHash
	}
	return nil
}

func (x *UserRecordSigned) GetPasswordRecoveryBlob() []byte {
	if x != nil {
		return x.PasswordRecoveryBlob
	}
	return nil
}

type UserRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version              uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	UserRecordSigned     []byte `protobuf:"bytes,2,opt,name=user_record_signed,json=userRecordSigned,proto3" json:"user_record_signed,omitempty"`
	Signature            []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	PheRecordT0          []byte `protobuf:"bytes,4,opt,name=phe_record_t0,json=pheRecordT0,proto3" json:"phe_record_t0,omitempty"`
	PheRecordT1          []byte `protobuf:"bytes,5,opt,name=phe_record_t1,json=pheRecordT1,proto3" json:"phe_record_t1,omitempty"`
	RecordVersion        uint32 `protobuf:"varint,6,opt,name=record_version,json=recordVersion,proto3" json:"record_version,omitempty"`
	PasswordRecoveryWrap []byte `protobuf:"bytes,7,opt,name=password_recovery_wrap,json=passwordRecoveryWrap,proto3" json:"password_recovery_wrap,omitempty"`
}

func (x *UserRecord) Reset() {
	*x = UserRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRecord) ProtoMessage() {}

func (x *UserRecord) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRecord.ProtoReflect.Descriptor instead.
func (*UserRecord) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{1}
}

func (x *UserRecord) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserRecord) GetUserRecordSigned() []byte {
	if x != nil {
		return x.UserRecordSigned
	}
	return nil
}

func (x *UserRecord) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *UserRecord) GetPheRecordT0() []byte {
	if x != nil {
		return x.PheRecordT0
	}
	return nil
}

func (x *UserRecord) GetPheRecordT1() []byte {
	if x != nil {
		return x.PheRecordT1
	}
	return nil
}

func (x *UserRecord) GetRecordVersion() uint32 {
	if x != nil {
		return x.RecordVersion
	}
	return 0
}

func (x *UserRecord) GetPasswordRecoveryWrap() []byte {
	if x != nil {
		return x.PasswordRecoveryWrap
	}
	return nil
}

type UserRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRecords []*UserRecord `protobuf:"bytes,1,rep,name=user_records,json=userRecords,proto3" json:"user_records,omitempty"`
}

func (x *UserRecords) Reset() {
	*x = UserRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRecords) ProtoMessage() {}

func (x *UserRecords) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRecords.ProtoReflect.Descriptor instead.
func (*UserRecords) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{2}
}

func (x *UserRecords) GetUserRecords() []*UserRecord {
	if x != nil {
		return x.UserRecords
	}
	return nil
}

type CellKeySigned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version          uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	UserId           string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	DataId           string `protobuf:"bytes,3,opt,name=dataId,proto3" json:"dataId,omitempty"`
	Cpk              []byte `protobuf:"bytes,4,opt,name=cpk,proto3" json:"cpk,omitempty"`
	EncryptedCskCms  []byte `protobuf:"bytes,5,opt,name=encrypted_csk_cms,json=encryptedCskCms,proto3" json:"encrypted_csk_cms,omitempty"`
	EncryptedCskBody []byte `protobuf:"bytes,6,opt,name=encrypted_csk_body,json=encryptedCskBody,proto3" json:"encrypted_csk_body,omitempty"`
}

func (x *CellKeySigned) Reset() {
	*x = CellKeySigned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellKeySigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellKeySigned) ProtoMessage() {}

func (x *CellKeySigned) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellKeySigned.ProtoReflect.Descriptor instead.
func (*CellKeySigned) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{3}
}

func (x *CellKeySigned) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CellKeySigned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CellKeySigned) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

func (x *CellKeySigned) GetCpk() []byte {
	if x != nil {
		return x.Cpk
	}
	return nil
}

func (x *CellKeySigned) GetEncryptedCskCms() []byte {
	if x != nil {
		return x.EncryptedCskCms
	}
	return nil
}

func (x *CellKeySigned) GetEncryptedCskBody() []byte {
	if x != nil {
		return x.EncryptedCskBody
	}
	return nil
}

type CellKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	CellKeySigned []byte `protobuf:"bytes,2,opt,name=cell_key_signed,json=cellKeySigned,proto3" json:"cell_key_signed,omitempty"`
	Signature     []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *CellKey) Reset() {
	*x = CellKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellKey) ProtoMessage() {}

func (x *CellKey) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellKey.ProtoReflect.Descriptor instead.
func (*CellKey) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{4}
}

func (x *CellKey) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CellKey) GetCellKeySigned() []byte {
	if x != nil {
		return x.CellKeySigned
	}
	return nil
}

func (x *CellKey) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type RoleSigned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rpk     []byte `protobuf:"bytes,3,opt,name=rpk,proto3" json:"rpk,omitempty"`
}

func (x *RoleSigned) Reset() {
	*x = RoleSigned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleSigned) ProtoMessage() {}

func (x *RoleSigned) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleSigned.ProtoReflect.Descriptor instead.
func (*RoleSigned) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{5}
}

func (x *RoleSigned) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RoleSigned) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleSigned) GetRpk() []byte {
	if x != nil {
		return x.Rpk
	}
	return nil
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	RoleSigned []byte `protobuf:"bytes,2,opt,name=role_signed,json=roleSigned,proto3" json:"role_signed,omitempty"`
	Signature  []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{6}
}

func (x *Role) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Role) GetRoleSigned() []byte {
	if x != nil {
		return x.RoleSigned
	}
	return nil
}

func (x *Role) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Roles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *Roles) Reset() {
	*x = Roles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Roles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Roles) ProtoMessage() {}

func (x *Roles) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Roles.ProtoReflect.Descriptor instead.
func (*Roles) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{7}
}

func (x *Roles) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type RoleAssignmentSigned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version      uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	RoleName     string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	UserId       string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PublicKeyId  []byte `protobuf:"bytes,4,opt,name=public_key_id,json=publicKeyId,proto3" json:"public_key_id,omitempty"`
	EncryptedRsk []byte `protobuf:"bytes,5,opt,name=encrypted_rsk,json=encryptedRsk,proto3" json:"encrypted_rsk,omitempty"`
}

func (x *RoleAssignmentSigned) Reset() {
	*x = RoleAssignmentSigned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAssignmentSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAssignmentSigned) ProtoMessage() {}

func (x *RoleAssignmentSigned) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAssignmentSigned.ProtoReflect.Descriptor instead.
func (*RoleAssignmentSigned) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{8}
}

func (x *RoleAssignmentSigned) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RoleAssignmentSigned) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleAssignmentSigned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoleAssignmentSigned) GetPublicKeyId() []byte {
	if x != nil {
		return x.PublicKeyId
	}
	return nil
}

func (x *RoleAssignmentSigned) GetEncryptedRsk() []byte {
	if x != nil {
		return x.EncryptedRsk
	}
	return nil
}

type RoleAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version              uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	RoleAssignmentSigned []byte `protobuf:"bytes,2,opt,name=role_assignment_signed,json=roleAssignmentSigned,proto3" json:"role_assignment_signed,omitempty"`
	Signature            []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *RoleAssignment) Reset() {
	*x = RoleAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAssignment) ProtoMessage() {}

func (x *RoleAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAssignment.ProtoReflect.Descriptor instead.
func (*RoleAssignment) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{9}
}

func (x *RoleAssignment) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RoleAssignment) GetRoleAssignmentSigned() []byte {
	if x != nil {
		return x.RoleAssignmentSigned
	}
	return nil
}

func (x *RoleAssignment) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type RoleAssignments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleAssignments []*RoleAssignment `protobuf:"bytes,1,rep,name=role_assignments,json=roleAssignments,proto3" json:"role_assignments,omitempty"`
}

func (x *RoleAssignments) Reset() {
	*x = RoleAssignments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAssignments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAssignments) ProtoMessage() {}

func (x *RoleAssignments) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAssignments.ProtoReflect.Descriptor instead.
func (*RoleAssignments) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{10}
}

func (x *RoleAssignments) GetRoleAssignments() []*RoleAssignment {
	if x != nil {
		return x.RoleAssignments
	}
	return nil
}

type GrantKeySigned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version               uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	UserId                string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	KeyId                 []byte `protobuf:"bytes,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	EncryptedGrantKeyBlob []byte `protobuf:"bytes,4,opt,name=encrypted_grant_key_blob,json=encryptedGrantKeyBlob,proto3" json:"encrypted_grant_key_blob,omitempty"`
	CreationDate          uint64 `protobuf:"varint,5,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	ExpirationDate        uint64 `protobuf:"varint,6,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
}

func (x *GrantKeySigned) Reset() {
	*x = GrantKeySigned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantKeySigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantKeySigned) ProtoMessage() {}

func (x *GrantKeySigned) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantKeySigned.ProtoReflect.Descriptor instead.
func (*GrantKeySigned) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{11}
}

func (x *GrantKeySigned) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GrantKeySigned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GrantKeySigned) GetKeyId() []byte {
	if x != nil {
		return x.KeyId
	}
	return nil
}

func (x *GrantKeySigned) GetEncryptedGrantKeyBlob() []byte {
	if x != nil {
		return x.EncryptedGrantKeyBlob
	}
	return nil
}

func (x *GrantKeySigned) GetCreationDate() uint64 {
	if x != nil {
		return x.CreationDate
	}
	return 0
}

func (x *GrantKeySigned) GetExpirationDate() uint64 {
	if x != nil {
		return x.ExpirationDate
	}
	return 0
}

type GrantKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version               uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	GrantKeySigned        []byte `protobuf:"bytes,2,opt,name=grant_key_signed,json=grantKeySigned,proto3" json:"grant_key_signed,omitempty"`
	Signature             []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	RecordVersion         uint32 `protobuf:"varint,4,opt,name=record_version,json=recordVersion,proto3" json:"record_version,omitempty"`
	EncryptedGrantKeyWrap []byte `protobuf:"bytes,5,opt,name=encrypted_grant_key_wrap,json=encryptedGrantKeyWrap,proto3" json:"encrypted_grant_key_wrap,omitempty"`
}

func (x *GrantKey) Reset() {
	*x = GrantKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantKey) ProtoMessage() {}

func (x *GrantKey) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantKey.ProtoReflect.Descriptor instead.
func (*GrantKey) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{12}
}

func (x *GrantKey) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GrantKey) GetGrantKeySigned() []byte {
	if x != nil {
		return x.GrantKeySigned
	}
	return nil
}

func (x *GrantKey) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *GrantKey) GetRecordVersion() uint32 {
	if x != nil {
		return x.RecordVersion
	}
	return 0
}

func (x *GrantKey) GetEncryptedGrantKeyWrap() []byte {
	if x != nil {
		return x.EncryptedGrantKeyWrap
	}
	return nil
}

type UserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserIdRequest) Reset() {
	*x = UserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdRequest) ProtoMessage() {}

func (x *UserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdRequest.ProtoReflect.Descriptor instead.
func (*UserIdRequest) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{13}
}

func (x *UserIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserIdAndDataIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DataId string `protobuf:"bytes,2,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
}

func (x *UserIdAndDataIdRequest) Reset() {
	*x = UserIdAndDataIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purekitV3_storage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdAndDataIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdAndDataIdRequest) ProtoMessage() {}

func (x *UserIdAndDataIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_purekitV3_storage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdAndDataIdRequest.ProtoReflect.Descriptor instead.
func (*UserIdAndDataIdRequest) Descriptor() ([]byte, []int) {
	return file_purekitV3_storage_proto_rawDescGZIP(), []int{14}
}

func (x *UserIdAndDataIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserIdAndDataIdRequest) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

var File_purekitV3_storage_proto protoreflect.FileDescriptor

var file_purekitV3_storage_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x75, 0x72, 0x65, 0x6b, 0x69, 0x74, 0x56, 0x33, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x22, 0xd4, 0x02, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x68, 0x65,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x70, 0x68, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x70, 0x68, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6e, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x68, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x70, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x75, 0x70, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x5f, 0x75, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x55, 0x73, 0x6b, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x6b, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x55, 0x73, 0x6b, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x70, 0x77, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x77, 0x64, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x14, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x62, 0x22, 0x97, 0x02, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x75,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x70, 0x68, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x30, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x68, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54,
	0x30, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x68, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x74, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x68, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x54, 0x31, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x57, 0x72,
	0x61, 0x70, 0x22, 0x44, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x35, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x0d, 0x43, 0x65, 0x6c,
	0x6c, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x63, 0x70, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x5f, 0x63, 0x73, 0x6b, 0x5f, 0x63, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x43, 0x73, 0x6b, 0x43,
	0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f,
	0x63, 0x73, 0x6b, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x43, 0x73, 0x6b, 0x42, 0x6f, 0x64, 0x79,
	0x22, 0x69, 0x0a, 0x07, 0x43, 0x65, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x63, 0x65, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x4c, 0x0a, 0x0a, 0x52,
	0x6f, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x70, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x70, 0x6b, 0x22, 0x5f, 0x0a, 0x04, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x2b, 0x0a, 0x05, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x14, 0x52, 0x6f, 0x6c, 0x65,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x5f, 0x72, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x52, 0x73, 0x6b, 0x22, 0x7e, 0x0a, 0x0e, 0x52, 0x6f, 0x6c,
	0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x54, 0x0a, 0x0f, 0x52, 0x6f, 0x6c,
	0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x10,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f,
	0x72, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xe1, 0x01, 0x0a, 0x0e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x08, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x77, 0x72, 0x61, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x57, 0x72,
	0x61, 0x70, 0x22, 0x28, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x16,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_purekitV3_storage_proto_rawDescOnce sync.Once
	file_purekitV3_storage_proto_rawDescData = file_purekitV3_storage_proto_rawDesc
)

func file_purekitV3_storage_proto_rawDescGZIP() []byte {
	file_purekitV3_storage_proto_rawDescOnce.Do(func() {
		file_purekitV3_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_purekitV3_storage_proto_rawDescData)
	})
	return file_purekitV3_storage_proto_rawDescData
}

var file_purekitV3_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_purekitV3_storage_proto_goTypes = []interface{}{
	(*UserRecordSigned)(nil),       // 0: protos.UserRecordSigned
	(*UserRecord)(nil),             // 1: protos.UserRecord
	(*UserRecords)(nil),            // 2: protos.UserRecords
	(*CellKeySigned)(nil),          // 3: protos.CellKeySigned
	(*CellKey)(nil),                // 4: protos.CellKey
	(*RoleSigned)(nil),             // 5: protos.RoleSigned
	(*Role)(nil),                   // 6: protos.Role
	(*Roles)(nil),                  // 7: protos.Roles
	(*RoleAssignmentSigned)(nil),   // 8: protos.RoleAssignmentSigned
	(*RoleAssignment)(nil),         // 9: protos.RoleAssignment
	(*RoleAssignments)(nil),        // 10: protos.RoleAssignments
	(*GrantKeySigned)(nil),         // 11: protos.GrantKeySigned
	(*GrantKey)(nil),               // 12: protos.GrantKey
	(*UserIdRequest)(nil),          // 13: protos.UserIdRequest
	(*UserIdAndDataIdRequest)(nil), // 14: protos.UserIdAndDataIdRequest
}
var file_purekitV3_storage_proto_depIdxs = []int32{
	1, // 0: protos.UserRecords.user_records:type_name -> protos.UserRecord
	6, // 1: protos.Roles.roles:type_name -> protos.Role
	9, // 2: protos.RoleAssignments.role_assignments:type_name -> protos.RoleAssignment
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_purekitV3_storage_proto_init() }
func file_purekitV3_storage_proto_init() {
	if File_purekitV3_storage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_purekitV3_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRecordSigned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellKeySigned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleSigned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Roles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAssignmentSigned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAssignments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantKeySigned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purekitV3_storage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIdAndDataIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_purekitV3_storage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_purekitV3_storage_proto_goTypes,
		DependencyIndexes: file_purekitV3_storage_proto_depIdxs,
		MessageInfos:      file_purekitV3_storage_proto_msgTypes,
	}.Build()
	File_purekitV3_storage_proto = out.File
	file_purekitV3_storage_proto_rawDesc = nil
	file_purekitV3_storage_proto_goTypes = nil
	file_purekitV3_storage_proto_depIdxs = nil
}
